package com.elearningpath.wetestx.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.elearningpath.wetestx.beans.ArticleTypeBean;
import com.elearningpath.wetestx.pojos.SingleArticle;

import com.elearningpath.wetestx.greendao.gen.ArticleTypeBeanDao;
import com.elearningpath.wetestx.greendao.gen.SingleArticleDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig articleTypeBeanDaoConfig;
    private final DaoConfig singleArticleDaoConfig;

    private final ArticleTypeBeanDao articleTypeBeanDao;
    private final SingleArticleDao singleArticleDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        articleTypeBeanDaoConfig = daoConfigMap.get(ArticleTypeBeanDao.class).clone();
        articleTypeBeanDaoConfig.initIdentityScope(type);

        singleArticleDaoConfig = daoConfigMap.get(SingleArticleDao.class).clone();
        singleArticleDaoConfig.initIdentityScope(type);

        articleTypeBeanDao = new ArticleTypeBeanDao(articleTypeBeanDaoConfig, this);
        singleArticleDao = new SingleArticleDao(singleArticleDaoConfig, this);

        registerDao(ArticleTypeBean.class, articleTypeBeanDao);
        registerDao(SingleArticle.class, singleArticleDao);
    }
    
    public void clear() {
        articleTypeBeanDaoConfig.clearIdentityScope();
        singleArticleDaoConfig.clearIdentityScope();
    }

    public ArticleTypeBeanDao getArticleTypeBeanDao() {
        return articleTypeBeanDao;
    }

    public SingleArticleDao getSingleArticleDao() {
        return singleArticleDao;
    }

}
